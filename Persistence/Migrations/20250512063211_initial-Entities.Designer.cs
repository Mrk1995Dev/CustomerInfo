// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250512063211_initial-Entities")]
    partial class initialEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Location.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 5, 12, 10, 2, 10, 905, DateTimeKind.Local).AddTicks(6397));

                    b.Property<bool>("IsRemoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedBy")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "آذربایجان شرقی"
                        },
                        new
                        {
                            Id = 2,
                            Title = "آذربایجان غربی"
                        },
                        new
                        {
                            Id = 3,
                            Title = "اردبیل"
                        },
                        new
                        {
                            Id = 4,
                            Title = "اصفهان"
                        },
                        new
                        {
                            Id = 5,
                            Title = "البرز"
                        },
                        new
                        {
                            Id = 6,
                            Title = "ایلام"
                        },
                        new
                        {
                            Id = 7,
                            Title = "بوشهر"
                        },
                        new
                        {
                            Id = 8,
                            Title = "تهران"
                        },
                        new
                        {
                            Id = 9,
                            Title = "چهارمحال و بختیاری"
                        },
                        new
                        {
                            Id = 10,
                            Title = "خراسان جنوبی"
                        },
                        new
                        {
                            Id = 11,
                            Title = "خراسان رضوی"
                        },
                        new
                        {
                            Id = 12,
                            Title = "خراسان شمالی"
                        },
                        new
                        {
                            Id = 13,
                            Title = "خوزستان"
                        },
                        new
                        {
                            Id = 14,
                            Title = "زنجان"
                        },
                        new
                        {
                            Id = 15,
                            Title = "سمنان"
                        },
                        new
                        {
                            Id = 16,
                            Title = "سیستان و بلوچستان"
                        },
                        new
                        {
                            Id = 17,
                            Title = "فارس"
                        },
                        new
                        {
                            Id = 18,
                            Title = "قزوین"
                        },
                        new
                        {
                            Id = 19,
                            Title = "قم"
                        },
                        new
                        {
                            Id = 20,
                            Title = "کردستان"
                        },
                        new
                        {
                            Id = 21,
                            Title = "کرمان"
                        },
                        new
                        {
                            Id = 22,
                            Title = "کرمانشاه"
                        },
                        new
                        {
                            Id = 23,
                            Title = "کهگیلویه و بویراحمد"
                        },
                        new
                        {
                            Id = 24,
                            Title = "گلستان"
                        },
                        new
                        {
                            Id = 25,
                            Title = "گیلان"
                        },
                        new
                        {
                            Id = 26,
                            Title = "لرستان"
                        },
                        new
                        {
                            Id = 27,
                            Title = "مازندران"
                        },
                        new
                        {
                            Id = 28,
                            Title = "مرکزی"
                        },
                        new
                        {
                            Id = 29,
                            Title = "هرمزگان"
                        },
                        new
                        {
                            Id = 30,
                            Title = "همدان"
                        },
                        new
                        {
                            Id = 31,
                            Title = "یزد"
                        },
                        new
                        {
                            Id = 32,
                            Title = "کیش"
                        });
                });

            modelBuilder.Entity("Domain.Users.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CityId")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("CoWorkers")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 5, 12, 10, 2, 10, 905, DateTimeKind.Local).AddTicks(9053));

                    b.Property<bool>("IsRemoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Domain.Users.Customer", b =>
                {
                    b.HasOne("Domain.Location.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
